{
  "license": "MIT",
  "version": "0.0.1",
  "name": "ohm-believable",
  "description": "An electronic color code simulator that calculates the resistance of electronic components",
  "author": {
    "name": "Patricio Trevino",
    "email": "patricio.trevino@gmail.com"
  },
  "main": "src/main.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/weirdpattern/ohm-value-calculator.git"
  },
  "dependencies": {
    "object-assign": "^4.1.1",
    "promise": "^8.0.1",
    "react": "^16.2.0",
    "react-color": "^2.13.8",
    "react-dom": "^16.2.0",
    "whatwg-fetch": "^2.0.3"
  },
  "devDependencies": {
    "@types/autoprefixer": "^6.7.3",
    "@types/case-sensitive-paths-webpack-plugin": "^2.1.0",
    "@types/extract-text-webpack-plugin": "^3.0.0",
    "@types/html-webpack-plugin": "^2.30.1",
    "@types/jest": "^21.1.10",
    "@types/node": "^8.5.2",
    "@types/react": "^16.0.31",
    "@types/react-color": "^2.13.3",
    "@types/react-dom": "^16.0.3",
    "@types/webpack": "^3.8.1",
    "@types/webpack-env": "^1.13.3",
    "@types/webpack-manifest-plugin": "^1.3.1",
    "autoprefixer": "^7.2.3",
    "case-sensitive-paths-webpack-plugin": "^2.1.1",
    "css-loader": "^0.28.7",
    "eslint": "^4.12.1",
    "eslint-config-prettier": "^2.9.0",
    "eslint-config-typescript": "^1.0.2",
    "eslint-loader": "^1.9.0",
    "eslint-plugin-filenames": "^1.2.0",
    "eslint-plugin-jest": "^21.3.2",
    "eslint-plugin-json": "^1.2.0",
    "eslint-plugin-jsx-a11y": "^6.0.2",
    "eslint-plugin-prettier": "^2.4.0",
    "eslint-plugin-react": "^7.5.1",
    "eslint-plugin-typescript": "^0.8.1",
    "extract-text-webpack-plugin": "^3.0.2",
    "file-loader": "^1.1.6",
    "html-webpack-plugin": "^2.30.1",
    "jest": "^22.0.3",
    "json-loader": "^0.5.7",
    "node-sass": "^4.7.2",
    "opn-cli": "^3.1.0",
    "postcss-flexbugs-fixes": "^3.2.0",
    "postcss-loader": "^2.0.9",
    "prettier": "^1.8.2",
    "react-hot-loader": "^3.1.3",
    "sass-loader": "^6.0.6",
    "source-map-loader": "^0.2.3",
    "style-loader": "^0.19.1",
    "ts-jest": "^22.0.0",
    "ts-loader": "^3.2.0",
    "ts-node": "^4.1.0",
    "typescript": "^2.6.2",
    "typescript-eslint-parser": "^11.0.0",
    "url-loader": "^0.6.2",
    "webpack": "^3.10.0",
    "webpack-dev-server": "^2.9.7",
    "webpack-manifest-plugin": "^1.3.2"
  },
  "scripts": {
    "lint": "eslint . --ext .js,.jsx,.ts,.tsx",
    "prettier": "prettier",
    "debug": "opn http://localhost:3333 && webpack-dev-server --config ./support/webpack.config.dev.ts",
    "test": "jest"
  },
  "devServer": {
    "host": "localhost",
    "port": 3333
  },
  "eslintConfig": {
    "extends": [
      "plugin:jsx-a11y/recommended",
      "typescript",
      "typescript/react",
      "typescript/prettier"
    ],
    "plugins": [
      "jest",
      "json",
      "jsx-a11y",
      "filenames"
    ],
    "env": {
      "jest": true
    },
    "rules": {
      "semi": "error",
      "no-undef": "off",
      "no-unused-vars": "off",
      "require-jsdoc": "error",
      "valid-jsdoc": [
        "error",
        {
          "preferType": {
            "any": "*",
            "object": "Object"
          },
          "requireReturnType": true,
          "requireParamDescription": true,
          "requireReturnDescription": true
        }
      ],
      "quotes": [
        "error",
        "double",
        {
          "avoidEscape": true
        }
      ],
      "no-console": "off",
      "filenames/no-index": "error",
      "jest/no-disabled-tests": "error",
      "jest/no-focused-tests": "error",
      "jest/no-identical-title": "error",
      "jest/valid-expect": "error"
    }
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "jsx",
      "ts",
      "tsx"
    ],
    "testMatch": [
      "**/specs/**/*[.-][Ss]pec[s]?.{j,t}s{,x}"
    ],
    "transform": {
      ".ts": "<rootDir>/node_modules/ts-jest/preprocessor.js",
      ".tsx": "<rootDir>/node_modules/ts-jest/preprocessor.js"
    },
    "rootDir": ".",
    "verbose": false,
    "resetMocks": true,
    "resetModules": true,
    "collectCoverage": false,
    "collectCoverageFrom": [
      "**/*.{j,t}s{,x}",
      "!**/*.min.js",
      "!**/static/**",
      "!**/specs/**",
      "!**/node_modules/**"
    ]
  }
}
